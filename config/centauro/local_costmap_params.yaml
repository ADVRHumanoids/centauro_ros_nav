local_costmap:
  update_frequency: 4.0
  publish_frequency: 4.0
  static_map: false
  rolling_window: true
  width: 6.0
  height: 6.0
  resolution: 0.05

  #The default maximum distance from the robot at which an obstacle will be inserted
  #into the cost map in meters. This can be over-ridden on a per-sensor basis.
  obstacle_range: 3.0 #Map updated with obstacles in 2.5 meters

  #footprint: [[0.4, 0.29], [0.4, -0.29], [-0.4, -0.29], [-0.4 ,0.29]]
  footprint_padding: 0.15

  plugins:
    - {name: static_layer,    type: "costmap_2d::StaticLayer"}
    - {name: obstacles_layer, type: "costmap_2d::ObstacleLayer"}
    - {name: inflater_layer,  type: "costmap_2d::InflationLayer"}

  static_layer:
    map_topic: /projected_map
    subscribe_to_updates: true
    lethal_cost_threshold: 100 #default:100 -> value=lethal from map

  obstacles_layer:
    footprint_clearing_enabled: true
    observation_sources: velodyne d435i #zed_mini #d435i
    
    #min_obstacle_height seems to be wrt odom frame(?)
    velodyne: {sensor_frame: pelvis, data_type: PointCloud2, topic: /velodyne_points_filtered, marking: true, clearing: true, min_obstacle_height: -0.25, max_obstacle_height: 1.0, obstacle_range: 8.0, raytrace_range: 150.0}
    d435i: {sensor_frame: pelvis, data_type: PointCloud2, topic: /D435i/D435i_camera/depth/color/points_filtered, marking: true, clearing: true, min_obstacle_height: -0.70, obstacle_range: 2.0, raytrace_range: 3.5, obstacle_persistence: 0.0}
    #zed_mini: {sensor_frame: pelvis, data_type: PointCloud2, topic: /zedx_left/zed_node/point_cloud/cloud_registered_filtered, marking: true, clearing: true, min_obstacle_height: 0.20}

  inflater_layer:
    inflation_radius: 0.65 #0.075
    cost_scaling_factor: 1.0  # Increasing --> decrease cost values, 10 default
